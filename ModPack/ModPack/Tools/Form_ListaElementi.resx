<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Bt_Esporta.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3QAAAN0BcFOiBwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAOFSURBVFhHrZfL
        TxNRFMa707UrXejSnWtX/gGAKGBVotBgXLlw4VISQ4wslIflJViKkrgxAY0xRo0K8ZlgUCPyEENbSl+U
        vih0qDZKuM536a13pqftDHXxS0/PPfecb+5zxsIYM8TFHtcu22C0omEwdrvBGXtrG4otNDpjCoANH9oQ
        g1gqBwXplGlwxPapRQZUUirMIIgdQF8qpwzpBE3D3t2NznirmigtJTaL2jfeilxUDUA6m4ajexuHYh+J
        hDtDzYWcVK08x1nHyiG1UyAvSfkEkFtfT/OHP7mu+JWHMdb/KlGS5tG4XKwQAf1ISMXVOSeGfc6/wYZf
        R5ljLFKQJ59XWVLJsGuPtX1J+HT8WxM5AdkFl9cBAqx2D6u47irI5fsB9n5+jS2ENoyJUGtpBGS3Grna
        jQp4NJlgtn6vURFpsUWzT8/3ORVoSgBsEyIGuACcWuqfgoeMUQFj00l24Y6P0zIaZOHEr1IiUqhtwdFJ
        NOYwIuBM7yJ7/nWVvZxK5hifSbIZn8JO9y+TeQFqW3B+U40CIaC63c1uvVghd4EMYhCLPrN+hVXecBUU
        gdoWXCJUo0AIwNB+W1KY/WmYfXKn2OhEnNsANnywEYNYIQAjVEgEaluyt1peo0AWgKFFQiw4zLuYAnkR
        IkYvAFAiUBs7AFeqpkFGFpBIZZg3kmbx9QwLJX5yG8CGDzZiKAEFRCimBJQzAgKdCMXUFEy6UrzYu+9r
        zDke4TaADR9sxBQTIIvgU2BmEXrCaf6kP4IbvCBsABs+2IgpJQBAxKm+5WnD2xBJ/8cUyNTYfV8MH0RI
        uqQuMhTAU2KoYQPY8MFGjFEB9b2h84aPYiT9ML/Of3Hsdj0LcxvAFkexiCkloLrTu8mPYqOXEZLieIWN
        +//qgxC3AWz4YCPGiIC6bv+b3G1o5Dqu715kU16FJy0GYhBbTADfBX3BgzkB26Ow8xcSimICau2+cVE3
        J6CcVzIK9JlVb0N98Rr7UpR8JdsWkf9S2jwSyV06Zrl0z68pXt3hzZy7m9gv19QIANRrubU3qEm0E6ra
        PH+sPf4j+nqaPwLqw6QcEcc6vGsnuryHqVp5DgFfE7pPM7Miqto9W9ae4Ig853pIp4z+49SIiMo291Zt
        l3/C5lg9QOWUIZ0UOLXE53ldd8Bd1ebeFMXUJ/19tGNx/Xinb6bO7ms5eXNuD5UjH2b5Cyv0o0sqLcxX
        AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wA=
</value>
  </data>
</root>