<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Bt_CaricaOrdine.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        3wAAAN8BD61hjgAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQRSURBVFhHrZZf
        TFN3FMf75h7m+/ZusgctG3TiNrdSXIKhs/wRCoVeCmxiBBluakycTEywGLYFETPsJimb28TpBqQJJlad
        VIMrCIXBtMY9uixmL3NsJKvd9vV3bml3e+/pvWXy8Eluz++c7zn9/Tm/nwlAVqwrfntNbrGnOM/u8QlC
        gnt5b3j+kKHvhM1HPuTLaXCwRiWWrdKzFnv9KSG+KECWLFIMxXKaSlgjYbM1PJVXXH9UiC2pxFfCEmmQ
        FpeDYI0b7Q3PiOCwSuxJCJMml0tjsNgbzBa75z4j8kSQJmmr86X9oCpXO/kr5TtQWN0if5O2eiZSH/Ka
        r+60460DXQjP3kHzoQ+U9rByT6QKWN5wSsf/TUFVM74cvoSxqzdhr39X6yNypRVAx0UMZLXbP+2R8Mu4
        G8EvJATfd6OjRcLLpf+N7zlyHOHIHezr7EuLU7GUPKKJAhLnnHPUMBeQgDl3Al8NMFSLvyNuRC9KaGjd
        jYnpBXkGuFgllFMugLqWMGTVZPIdHsSml5MzHP2wCyf859lYhkXKbVpur5yDBqmpjk1MPLzpRv+ZYfWG
        04Vym8QH9XbWQU13Z+YCbnwt4erEDLa4EkcuS3xUAF0i3KCGi58p1l9F/0ceTM5G2TgdQlQA3WTcoEyR
        U8LP50sw4y/DuL8KPwVq8fuEtoBO734MBa6wGjrcMy1fp9ygzIE9LsTGtqX4x1sJvOPCQ38F5s85MftN
        DWZG3PD2fYIjxwdYjYyI3IYFnOmqTCsgNupA/PNSPBpxpGyTp8twTvx7V2s7q5ERuQCDJaCpTyuA4Wx3
        BabmosgvaWQ1dBBLoLMJN4lz/2eAT6rE294knwBOwwB5E2Y8hp7GWjahmsPHuuUewGkY4NNtRN0Hq9iE
        Sn791oG+wQto6+hhNfSQG5FeKx7r3c4mVXKtvxzB61Mokto08QYkWnGmy4ha6vDIBUyNevEgIO4AJnnk
        Wguargzi8N1pbNq5Ny3eiNRlJBfAXMdW5y55WmltaYPNLtxFaPwyQgEfbo/sxeR3bdgeCcJ/+xZOLUxi
        21wQG+ta05LokH4dE0YPknxHI6p3t6OjZwBnRy9jX3QKX0Uj+CsWRyweR1ckBJvvYzZWg/pBQqz0Sfb6
        0CAGfryFGBXwKI7OyDgKTvSyvir4JxmxkkfpS837USqm/eT89/K/t9MSuHaxvkl0H6VJ6Omcu9X94IWi
        GhjxYl0LbKf7YT3ZC4trJ+uThDQNn+VJcgurn99gLV9cv7kEqwFpkSaXS2NIYrM5n86xVV5f/2opK5oV
        IpY0SIvLQbBGJWar02wuqPhBiP3LJuEQvhRDsZymEtbI8dzmN9fmFFYeFMLzZmv5bxteK4vJRQnom2w0
        llNY9R75chpaYHoMAhK92P5E4k4AAAAASUVORK5CYII=
</value>
  </data>
</root>